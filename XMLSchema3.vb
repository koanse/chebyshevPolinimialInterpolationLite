'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.573
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.Data
Imports System.Runtime.Serialization
Imports System.Xml


<Serializable(),  _
 System.ComponentModel.DesignerCategoryAttribute("code"),  _
 System.Diagnostics.DebuggerStepThrough(),  _
 System.ComponentModel.ToolboxItem(true)>  _
Public Class XMLSchema3
    Inherits DataSet
    
    Private tableКоэффициенты_интерполяционного_многочлена As Коэффициенты_интерполяционного_многочленаDataTable
    
    Public Sub New()
        MyBase.New
        Me.InitClass
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler Me.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    Protected Sub New(ByVal info As SerializationInfo, ByVal context As StreamingContext)
        MyBase.New
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(System.String)),String)
        If (Not (strSchema) Is Nothing) Then
            Dim ds As DataSet = New DataSet
            ds.ReadXmlSchema(New XmlTextReader(New System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("Коэффициенты интерполяционного многочлена")) Is Nothing) Then
                Me.Tables.Add(New Коэффициенты_интерполяционного_многочленаDataTable(ds.Tables("Коэффициенты интерполяционного многочлена")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.InitClass
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler Me.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Коэффициенты_интерполяционного_многочлена As Коэффициенты_интерполяционного_многочленаDataTable
        Get
            Return Me.tableКоэффициенты_интерполяционного_многочлена
        End Get
    End Property
    
    Public Overrides Function Clone() As DataSet
        Dim cln As XMLSchema3 = CType(MyBase.Clone,XMLSchema3)
        cln.InitVars
        Return cln
    End Function
    
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As XmlReader)
        Me.Reset
        Dim ds As DataSet = New DataSet
        ds.ReadXml(reader)
        If (Not (ds.Tables("Коэффициенты интерполяционного многочлена")) Is Nothing) Then
            Me.Tables.Add(New Коэффициенты_интерполяционного_многочленаDataTable(ds.Tables("Коэффициенты интерполяционного многочлена")))
        End If
        Me.DataSetName = ds.DataSetName
        Me.Prefix = ds.Prefix
        Me.Namespace = ds.Namespace
        Me.Locale = ds.Locale
        Me.CaseSensitive = ds.CaseSensitive
        Me.EnforceConstraints = ds.EnforceConstraints
        Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
        Me.InitVars
    End Sub
    
    Protected Overrides Function GetSchemaSerializable() As System.Xml.Schema.XmlSchema
        Dim stream As System.IO.MemoryStream = New System.IO.MemoryStream
        Me.WriteXmlSchema(New XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return System.Xml.Schema.XmlSchema.Read(New XmlTextReader(stream), Nothing)
    End Function
    
    Friend Sub InitVars()
        Me.tableКоэффициенты_интерполяционного_многочлена = CType(Me.Tables("Коэффициенты интерполяционного многочлена"),Коэффициенты_интерполяционного_многочленаDataTable)
        If (Not (Me.tableКоэффициенты_интерполяционного_многочлена) Is Nothing) Then
            Me.tableКоэффициенты_интерполяционного_многочлена.InitVars
        End If
    End Sub
    
    Private Sub InitClass()
        Me.DataSetName = "XMLSchema3"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/XMLSchema3.xsd"
        Me.Locale = New System.Globalization.CultureInfo("ru-RU")
        Me.CaseSensitive = false
        Me.EnforceConstraints = true
        Me.tableКоэффициенты_интерполяционного_многочлена = New Коэффициенты_интерполяционного_многочленаDataTable
        Me.Tables.Add(Me.tableКоэффициенты_интерполяционного_многочлена)
    End Sub
    
    Private Function ShouldSerializeКоэффициенты_интерполяционного_многочлена() As Boolean
        Return false
    End Function
    
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    Public Delegate Sub Коэффициенты_интерполяционного_многочленаRowChangeEventHandler(ByVal sender As Object, ByVal e As Коэффициенты_интерполяционного_многочленаRowChangeEvent)
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class Коэффициенты_интерполяционного_многочленаDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnСтепень_переменной As DataColumn
        
        Private columnКоэффициент As DataColumn
        
        Friend Sub New()
            MyBase.New("Коэффициенты интерполяционного многочлена")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property Степень_переменнойColumn As DataColumn
            Get
                Return Me.columnСтепень_переменной
            End Get
        End Property
        
        Friend ReadOnly Property КоэффициентColumn As DataColumn
            Get
                Return Me.columnКоэффициент
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As Коэффициенты_интерполяционного_многочленаRow
            Get
                Return CType(Me.Rows(index),Коэффициенты_интерполяционного_многочленаRow)
            End Get
        End Property
        
        Public Event Коэффициенты_интерполяционного_многочленаRowChanged As Коэффициенты_интерполяционного_многочленаRowChangeEventHandler
        
        Public Event Коэффициенты_интерполяционного_многочленаRowChanging As Коэффициенты_интерполяционного_многочленаRowChangeEventHandler
        
        Public Event Коэффициенты_интерполяционного_многочленаRowDeleted As Коэффициенты_интерполяционного_многочленаRowChangeEventHandler
        
        Public Event Коэффициенты_интерполяционного_многочленаRowDeleting As Коэффициенты_интерполяционного_многочленаRowChangeEventHandler
        
        Public Overloads Sub AddКоэффициенты_интерполяционного_многочленаRow(ByVal row As Коэффициенты_интерполяционного_многочленаRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function AddКоэффициенты_интерполяционного_многочленаRow(ByVal Степень_переменной As Long, ByVal Коэффициент As Single) As Коэффициенты_интерполяционного_многочленаRow
            Dim rowКоэффициенты_интерполяционного_многочленаRow As Коэффициенты_интерполяционного_многочленаRow = CType(Me.NewRow,Коэффициенты_интерполяционного_многочленаRow)
            rowКоэффициенты_интерполяционного_многочленаRow.ItemArray = New Object() {Степень_переменной, Коэффициент}
            Me.Rows.Add(rowКоэффициенты_интерполяционного_многочленаRow)
            Return rowКоэффициенты_интерполяционного_многочленаRow
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As Коэффициенты_интерполяционного_многочленаDataTable = CType(MyBase.Clone,Коэффициенты_интерполяционного_многочленаDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New Коэффициенты_интерполяционного_многочленаDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnСтепень_переменной = Me.Columns("Степень переменной")
            Me.columnКоэффициент = Me.Columns("Коэффициент")
        End Sub
        
        Private Sub InitClass()
            Me.columnСтепень_переменной = New DataColumn("Степень переменной", GetType(System.Int64), Nothing, System.Data.MappingType.Attribute)
            Me.Columns.Add(Me.columnСтепень_переменной)
            Me.columnКоэффициент = New DataColumn("Коэффициент", GetType(System.Single), Nothing, System.Data.MappingType.Attribute)
            Me.Columns.Add(Me.columnКоэффициент)
            Me.columnСтепень_переменной.Namespace = ""
            Me.columnКоэффициент.Namespace = ""
        End Sub
        
        Public Function NewКоэффициенты_интерполяционного_многочленаRow() As Коэффициенты_интерполяционного_многочленаRow
            Return CType(Me.NewRow,Коэффициенты_интерполяционного_многочленаRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New Коэффициенты_интерполяционного_многочленаRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(Коэффициенты_интерполяционного_многочленаRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Коэффициенты_интерполяционного_многочленаRowChangedEvent) Is Nothing) Then
                RaiseEvent Коэффициенты_интерполяционного_многочленаRowChanged(Me, New Коэффициенты_интерполяционного_многочленаRowChangeEvent(CType(e.Row,Коэффициенты_интерполяционного_многочленаRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Коэффициенты_интерполяционного_многочленаRowChangingEvent) Is Nothing) Then
                RaiseEvent Коэффициенты_интерполяционного_многочленаRowChanging(Me, New Коэффициенты_интерполяционного_многочленаRowChangeEvent(CType(e.Row,Коэффициенты_интерполяционного_многочленаRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Коэффициенты_интерполяционного_многочленаRowDeletedEvent) Is Nothing) Then
                RaiseEvent Коэффициенты_интерполяционного_многочленаRowDeleted(Me, New Коэффициенты_интерполяционного_многочленаRowChangeEvent(CType(e.Row,Коэффициенты_интерполяционного_многочленаRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Коэффициенты_интерполяционного_многочленаRowDeletingEvent) Is Nothing) Then
                RaiseEvent Коэффициенты_интерполяционного_многочленаRowDeleting(Me, New Коэффициенты_интерполяционного_многочленаRowChangeEvent(CType(e.Row,Коэффициенты_интерполяционного_многочленаRow), e.Action))
            End If
        End Sub
        
        Public Sub RemoveКоэффициенты_интерполяционного_многочленаRow(ByVal row As Коэффициенты_интерполяционного_многочленаRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class Коэффициенты_интерполяционного_многочленаRow
        Inherits DataRow
        
        Private tableКоэффициенты_интерполяционного_многочлена As Коэффициенты_интерполяционного_многочленаDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tableКоэффициенты_интерполяционного_многочлена = CType(Me.Table,Коэффициенты_интерполяционного_многочленаDataTable)
        End Sub
        
        Public Property Степень_переменной As Long
            Get
                Try 
                    Return CType(Me(Me.tableКоэффициенты_интерполяционного_многочлена.Степень_переменнойColumn),Long)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableКоэффициенты_интерполяционного_многочлена.Степень_переменнойColumn) = value
            End Set
        End Property
        
        Public Property Коэффициент As Single
            Get
                Try 
                    Return CType(Me(Me.tableКоэффициенты_интерполяционного_многочлена.КоэффициентColumn),Single)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableКоэффициенты_интерполяционного_многочлена.КоэффициентColumn) = value
            End Set
        End Property
        
        Public Function IsСтепень_переменнойNull() As Boolean
            Return Me.IsNull(Me.tableКоэффициенты_интерполяционного_многочлена.Степень_переменнойColumn)
        End Function
        
        Public Sub SetСтепень_переменнойNull()
            Me(Me.tableКоэффициенты_интерполяционного_многочлена.Степень_переменнойColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsКоэффициентNull() As Boolean
            Return Me.IsNull(Me.tableКоэффициенты_интерполяционного_многочлена.КоэффициентColumn)
        End Function
        
        Public Sub SetКоэффициентNull()
            Me(Me.tableКоэффициенты_интерполяционного_многочлена.КоэффициентColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class Коэффициенты_интерполяционного_многочленаRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As Коэффициенты_интерполяционного_многочленаRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As Коэффициенты_интерполяционного_многочленаRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As Коэффициенты_интерполяционного_многочленаRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
